# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    machine: true

    steps:
      - checkout

      - run:
          name: Install Python 3.7
          command: |
            sudo apt-get install software-properties-common
            sudo add-apt-repository ppa:deadsnakes/ppa
            sudo apt-get update
            sudo apt-get install python3.7

      - run:
          name: Setup git config
          command: |
            git config --global user.email "circle@circleci.org"
            git config --global user.name "CircleCI"
            git config --global push.default simple
            git config --global --unset url.ssh://git@github.com.insteadOf

      - add_ssh_keys:
          fingerprints:
            - "e9:7d:20:a0:51:b2:9c:22:f6:b9:5b:55:47:c4:7c:20"

      - run:
          name: Add ssh key to known_hosts
          command:  |
            ssh-keyscan -H polka-dot-cat.git.beanstalkapp.com >> ~/.ssh/known_hosts

      - run:
          name: Start clowder tests docker container
          command: |
            pyenv install 3.6.3
            pyenv global 3.6.3
            python --version
            script/docker start

      - run:
          name: Code climate setup
          command: script/ci_before

      - run:
          name: Pytest functional tests - not write and not offline - parallel
          command: docker-compose exec clowder script/test "-n auto -m 'not write and not offline'"

      - run:
          name: Pytest functional tests - write and not offline
          command: docker-compose exec clowder script/test "-m 'write and not offline'"

      - run:
          name: Pytest functional tests - offline
          command: docker-compose exec clowder script/test "-m 'offline'"

      - run:
          name: Code climate reporting
          command: script/ci_after

      - store_test_results:
          path: build/reports

      - codecov/upload:
          file: build/coverage/.coverage

      - store_artifacts:
          path: build/coverage

      - store_artifacts:
          path: build/reports
