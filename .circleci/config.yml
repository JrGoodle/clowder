version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2

commands:
  install_code_climate:
    steps:
      - run:
          name: Install Code Climate test coverage reporter
          command: script/install_cc_test_reporter
  setup_ssh:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "e9:7d:20:a0:51:b2:9c:22:f6:b9:5b:55:47:c4:7c:20"
      - run:
          name: Add ssh key to known_hosts
          command: ssh-keyscan -H polka-dot-cat.git.beanstalkapp.com >> ~/.ssh/known_hosts
  setup_git_config:
    steps:
      - run:
          name: Setup git config
          command: |
            git config --global user.email "circle@circleci.org"
            git config --global user.name "CircleCI"
            git config --global push.default simple
            git config --global --unset url.ssh://git@github.com.insteadOf
  report_coverage:
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install coverage.py
          command: pip install coverage
      - run:
          name: Generate test coverage reports
          command: script/test --report-coverage
      - codecov/upload:
          file: build/coverage/coverage.xml
      - run:
          name: Sum coverage for Code climate
          command: |
            ./cc-test-reporter sum-coverage \
              --parts 9 \
              --output build/codeclimate/codeclimate.json \
              build/codeclimate/codeclimate.*.json
      - run:
          name: Upload coverage to Code climate
          command: |
            ./cc-test-reporter upload-coverage \
            --id ${CC_TEST_REPORTER_ID} \
            --input build/codeclimate/codeclimate.json
      - store_artifacts:
          path: build
  test:
    description: "Pytest functional tests"
    parameters:
      markers:
        type: string
      label:
        type: string
    steps:
      - run:
          name: Initialize Code Climate test coverage reporter
          command: ./cc-test-reporter before-build
      - run:
          name: Start clowder tests docker container
          command: script/docker start
      - run: |
          docker-compose exec clowder script/test \
            --markers "<<parameters.markers>>" \
            --label <<parameters.label>>
      - run:
          name: Update build files ownership
          command: sudo chown -R ${USER} build
      - run:
          name: Format coverage for Code climate
          command: |
            ./cc-test-reporter format-coverage \
              --input-type coverage.py \
              --output build/codeclimate/codeclimate.<<parameters.label>>.json \
              build/coverage/coverage.<<parameters.label>>.xml
      - store_test_results:
          path: build/cucumber
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths:
            - build/
  test_parallel:
    description: "Pytest functional tests - parallel"
    parameters:
      markers:
        type: string
      label:
        type: string
    steps:
      - run:
          name: Initialize Code Climate test coverage reporter
          command: ./cc-test-reporter before-build
      - run:
          name: Start clowder tests docker container
          command: script/docker start
      - run: |
          docker-compose exec clowder script/test \
            --markers "<<parameters.markers>>" \
            --label <<parameters.label>> \
            --parallel
      - run:
          name: Update build files ownership
          command: sudo chown -R ${USER} build
      - run:
          name: Format coverage for Code climate
          command: |
            ./cc-test-reporter format-coverage \
              --input-type coverage.py \
              --output build/codeclimate/codeclimate.<<parameters.label>>.json \
              build/coverage/coverage.<<parameters.label>>.xml
      - store_test_results:
          path: build/cucumber
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths:
            - build/

jobs:
  test_parallel:
    machine: true
    steps:
      - checkout
      - setup_ssh
      - setup_git_config
      - run: pyenv install
      - install_code_climate
      - test_parallel:
          markers: not write and not offline
          label: parallel
  test_write:
    machine: true
    steps:
      - checkout
      - setup_ssh
      - setup_git_config
      - run: pyenv install
      - install_code_climate
      - test:
          markers: write
          label: write
  test_offline:
    machine: true
    steps:
      - checkout
      - setup_ssh
      - setup_git_config
      - run: pyenv install
      - install_code_climate
      - test:
          markers: offline and not write
          label: offline
  report_coverage:
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout
      - setup_git_config
      - install_code_climate
      - report_coverage

workflows:
  pytest:
    jobs:
      - test_write
      - test_parallel
      - test_offline
      - report_coverage:
          requires:
            - test_parallel
            - test_write
            - test_offline
