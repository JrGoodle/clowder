version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    machine: true

    steps:
      - checkout

      - run:
          name: Install python via pyenv
          command: |
            pyenv install
            python --version

      - run:
          name: Setup git config
          command: |
            git config --global user.email "circle@circleci.org"
            git config --global user.name "CircleCI"
            git config --global push.default simple
            git config --global --unset url.ssh://git@github.com.insteadOf

      - add_ssh_keys:
          fingerprints:
            - "e9:7d:20:a0:51:b2:9c:22:f6:b9:5b:55:47:c4:7c:20"

      - run:
          name: Add ssh key to known_hosts
          command: ssh-keyscan -H polka-dot-cat.git.beanstalkapp.com >> ~/.ssh/known_hosts

      - run:
          name: Start clowder tests docker container
          command: script/docker start

      - run:
          name: Initialize Code Climate test reporter
          command: |
            script/install_cc_test_reporter
            ./cc-test-reporter before-build

      # - run:
      #     name: Pytest functional tests - not write and not offline - parallel
      #     command: docker-compose exec clowder script/test "-n auto -m 'not write and not offline'"

      # - run:
      #     name: Pytest functional tests - write and not offline
      #     command: docker-compose exec clowder script/test "-m 'write and not offline'"

      # - run:
      #     name: Pytest functional tests - offline
      #     command: docker-compose exec clowder script/test "-m 'offline'"

      - run:
          name: Pytest functional tests - not write and not offline - parallel
          command: docker-compose exec clowder script/test "-n auto -m 'branch'"

      - run:
          name: Pytest functional tests - write and not offline
          command: docker-compose exec clowder script/test "-m 'status'"

      - run:
          name: Update build files ownership
          command: sudo chown --recursive ${USER} build

      - run:
          name: Upload coverage to Code climate
          command: |
            ./cc-test-reporter format-coverage --input-type coverage.py --output - build/coverage/coverage.xml \
              | ./cc-test-reporter upload-coverage --id ${CC_TEST_REPORTER_ID} --input -

      - store_test_results:
          path: build/cucumber
      - store_test_results:
          path: build/junit

      - codecov/upload:
          file: build/coverage/coverage.xml

      - store_artifacts:
          path: build/coverage
      - store_artifacts:
          path: build/cucumber
      - store_artifacts:
          path: build/junit
