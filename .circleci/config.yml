# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    machine: true

    steps:
      - checkout

      # # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "requirements.txt" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-

      # - run:
      #     name: install dependencies
      #     command: |
      #       curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
      #       sudo apt-get install git-lfs
      #       python --version
      #       python -m venv venv
      #       . venv/bin/activate
      #       sudo pip install -r requirements.txt
      #       sudo -H pip install -e .

      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: setup git config
          command: |
            git config --global user.email "circle@circleci.org"
            git config --global user.name "CircleCI"
            git config --global push.default simple
            git config --global --unset url.ssh://git@github.com.insteadOf

      - add_ssh_keys:
          fingerprints:
            - "e9:7d:20:a0:51:b2:9c:22:f6:b9:5b:55:47:c4:7c:20"

      - run:
          name: Add ssh key to known_hosts
          command:  |
            cat ~/.ssh/known_hosts
            ssh-keyscan -H beanstalkapp.com >> ~/.ssh/known_hosts
            cat ~/.ssh/known_hosts
# echo 'e9:7d:20:a0:51:b2:9c:22:f6:b9:5b:55:47:c4:7c:20' >> ~/.ssh/known_hosts

      - run:
          name: Code climate setup
          command: script/ci_before

      # - run:
      #     name: run pytest functional tests - parallel
      #     command: script/test "-n auto -m 'not write and not offline'"

      # - run:
      #     name: run pytest functional tests - write
      #     command: script/test "-m 'write and not offline'"

      - run:
          name: Start clowder tests docker container
          command: script/docker start

      - run:
          name: run pytest functional tests - offline
          # command: docker-compose exec clowder script/test "-m offline"
          command: |
            docker-compose exec clowder git clone git@github.com:JrGoodle/felidae.git
            docker-compose exec clowder rm -rf felidae
            docker-compose exec clowder git clone git@polka-dot-cat.git.beanstalkapp.com:polka-dot-cat/felidae.git

      # - run:
      #     name: Stop clowder tests docker container
      #     command: script/docker stop

      - run:
          name: Code climate reporting
          command: script/ci_after

      - store_test_results:
          path: build/reports

      - codecov/upload:
          file: build/coverage/.coverage

      - store_artifacts:
          path: build/coverage

      - store_artifacts:
          path: build/reports
