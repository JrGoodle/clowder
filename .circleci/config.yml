# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    machine:
      image: python:3.8.5

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs
            python3 -m venv venv
            . venv/bin/activate
            sudo pip3 install -r requirements.txt
            sudo -H pip install -e .

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: setup git config
          command: |
            git config --global user.email "circle@circleci.org"
            git config --global user.name "CircleCI"
            git config --global push.default simple
            git config --global --unset url.ssh://git@github.com.insteadOf
            sudo git config --system --unset-all filter.lfs.clean
            sudo git config --system --unset-all filter.lfs.smudge
            sudo git config --system --unset-all filter.lfs.process
            sudo git config --system --unset-all filter.lfs.required

      - add_ssh_keys:
          fingerprints:
            - "e9:7d:20:a0:51:b2:9c:22:f6:b9:5b:55:47:c4:7c:20"

      - run:
          name: Add ssh key to known_hosts
          command:  ssh-keyscan polka-dot-cat.git.beanstalkapp.com >> ~/.ssh/known_hosts

      - run:
          name: Code climate setup
          command: script/ci_before

      # - run:
      #     name: run pytest functional tests - parallel
      #     command: script/test "-n auto -m 'not write and not offline'"

      # - run:
      #     name: run pytest functional tests - write
      #     command: script/test "-m 'write and not offline'"

      - run:
          name: run pytest functional tests - offline
          command: |
            script/docker start
            docker-compose exec --privileged clowder script/test "-m offline"
            script/docker stop

      # - run:
      #     name: run pytest functional tests - offline
      #     command: sudo script/test "-m offline"

      - run:
          name: Code climate reporting
          command: script/ci_after

      - store_test_results:
          path: build/reports

      - codecov/upload:
          file: build/coverage/.coverage

      - store_artifacts:
          path: build/coverage

      - store_artifacts:
          path: build/reports
