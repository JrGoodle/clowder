#!/usr/bin/env bash
# shellcheck disable=SC1091
# set -o xtrace
set -euo pipefail
cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."
. 'script/utils.sh'

# FIXME: Get these asserts to work!
# assert_git_branch 'master'
# assert_git_clean

VERSION_FILE='clowder/__init__.py'
VERSION_MATCH_PATTERN="__version__ = '"
VERSION=$(awk "/${VERSION_MATCH_PATTERN}/" "${VERSION_FILE}" | sed -n -e "s/^.*${VERSION_MATCH_PATTERN}//p" | tr -d "',")
o "VERSION: ${VERSION}"

run git fetch --tags

if git rev-list "${VERSION}" >/dev/null 2>&1; then
    exit_failure "${VERSION} tag exists. No deployment will be done"
fi

h1 "${VERSION} tag not found. Deploying..."

h2 'Clean existing build artifacts'
run script/clean

h2 'Install dependencies'
run "${PWD}/script/bootstrap"
run pipenv install --deploy --dev

h2 "Build distributions for ${VERSION}"
DIST_WHEEL="${PWD}/dist/clowder_repo-${VERSION}-py3-none-any.whl"
DIST_ARCHIVE="${PWD}/dist/clowder-repo-${VERSION}.tar.gz"

h3 "Create source distribution for ${VERSION}"
run pipenv run python setup.py sdist
assert_file_exists "$DIST_ARCHIVE"

h3 "Build wheel distribution for ${VERSION}"
run pipenv run python setup.py bdist_wheel
assert_file_exists "$DIST_WHEEL"

h2 "Create new GitHub Release ${VERSION}"
# TODO: Load release notes from file
gh release create "$VERSION" \
    "$DIST_WHEEL" \
    "$DIST_ARCHIVE" \
    --title "$VERSION" \
    --notes "[${VERSION} on PyPI](https://pypi.org/project/clowder-repo/${VERSION}/)" \
    --target "$(current_commit)" \
    --prerelease

h2 "Upload ${VERSION} to PyPI"
pipenv run twine upload dist/*
