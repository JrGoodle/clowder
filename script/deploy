#!/usr/bin/env bash

cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.." || exit 1

echo "deploy"

# if [[ "$TRAVIS_PULL_REQUEST" != "false" ]]; then
#   echo "This is a pull request. No deployment will be done."
#   exit 0
# fi
# if [[ "$TRAVIS_BRANCH" != "master" ]]; then
#   echo "Testing on a branch other than master. No deployment will be done."
#   exit 0
# fi

echo "TEST: PATH: $PATH"
echo "TEST: python3 version: $(python3 --version)"
echo "TEST: python3 which: $(which python3)"
echo "TEST: github-release version: $(github-release --version)"
echo "TEST: pip3 version: $(pip3 --version)"
echo "TEST: pip3 which: $(which pip3)"

export GITHUB_USER='JrGoodle'
export GITHUB_REPO='clowder'

pushd "src" || exit 1

SETUP_PY="$(pwd)/setup.py"
VERSION=$(awk "/version='/" "${SETUP_PY}" | sed -n -e "s/^.*version='//p" | tr -d "',")
echo "VERSION=${VERSION}"
TAG="${VERSION}"

git fetch --tags
# if git rev-list "${TAG}" >/dev/null; then
#     echo "${TAG} tag exists. No deployment will be done."
# else
    echo "${TAG} tag not found. Deploying..."

    echo 'Create source distribution'
    echo '--------------------------'
    sudo -H python3 setup.py sdist
    echo ''

    echo 'Create wheel'
    echo '------------'
    sudo -H python3 setup.py bdist_wheel
    echo ''

    echo "Creating new tag and GitHub Release"
    echo '-----------------------------------'
    # github-release release \
    #     --tag "${TAG}" \
    #     --name "${TAG}" \
    #     --description "Release ${TAG}"
    echo ''

    echo "Uploading artifacts to GitHub Releases"
    echo '--------------------------------------'
    pushd "dist" || exit 1
    artifacts=( "clowder_repo-${VERSION}-py3-none-any.whl" \
                 "clowder-repo-${VERSION}.tar.gz" )
    for artifact in "${artifacts[@]}"; do
        echo "Upload ${artifact} to GitHub Release"
        # github-release upload \
        #     --tag "${TAG}" \
        #     --name "${artifact}" \
        #     --file "${artifact}"
    done
    popd || exit 1
    popd || exit 1
    echo ''

    echo 'Uploading to PyPI'
    echo '-----------------'
    # twine upload src/dist/*
    echo ''
# fi

echo "TEST: src/dist: $(ls src/dist)"
