#!/usr/bin/env bash

cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.." || exit 1

echo "deploy"

# FIXME: Update for GitHub Actions workflow
exit 1

if [[ "$TRAVIS_PULL_REQUEST" != "false" ]]; then
  echo "This is a pull request. No deployment will be done."
  exit 0
fi
if [[ "$TRAVIS_BRANCH" != "master" ]]; then
  echo "Testing on a branch other than master. No deployment will be done."
  exit 0
fi

export GITHUB_USER='JrGoodle'
export GITHUB_REPO='clowder'

pushd 'src' || exit 1

SETUP_PY="$(pwd)/setup.py"
VERSION=$(awk "/version='/" "${SETUP_PY}" | sed -n -e "s/^.*version='//p" | tr -d "',")
echo "VERSION=${VERSION}"
TAG="${VERSION}"

popd || exit 1

git fetch --tags || exit 1
if git rev-list "${TAG}" >/dev/null; then
    echo "${TAG} tag exists. No deployment will be done."
else
    echo "${TAG} tag not found. Deploying..."

    echo 'Clean any existing build artifacts'
    echo '----------------------------------'
    script/clean all || exit 1
    echo ''

    pushd 'src' || exit 1
    echo ''

    echo 'Create source distribution'
    echo '--------------------------'
    sudo -H python3 setup.py sdist || exit 1
    echo ''

    echo 'Create wheel'
    echo '------------'
    sudo -H python3 setup.py bdist_wheel || exit 1
    echo ''

    echo 'Create tag and push to GitHub'
    echo '-----------------------------'
    git tag "${TAG}" -a -m "${TAG}" || exit 1
    git push origin "${TAG}" || exit 1
    echo ''

    echo "Create new GitHub Release"
    echo '-------------------------'
    github-release release \
        --tag "${TAG}" \
        --name "${TAG}" \
        --description "[${TAG} on PyPI](https://pypi.org/project/clowder-repo/${TAG}/)" || exit 1
    echo ''

    echo "Upload artifacts to GitHub Releases"
    echo '-----------------------------------'
    pushd "dist" || exit 1
    artifacts=( "clowder_repo-${VERSION}-py3-none-any.whl" \
                 "clowder-repo-${VERSION}.tar.gz" )
    for artifact in "${artifacts[@]}"; do
        echo "Upload ${artifact} to GitHub Release"
        github-release upload \
            --tag "${TAG}" \
            --name "${artifact}" \
            --file "${artifact}" || exit 1
    done
    popd || exit 1
    popd || exit 1
    echo ''

    echo 'Upload to PyPI'
    echo '--------------'
    twine upload src/dist/* || exit 1
    echo ''
fi
