{
  "title": "JSON schema for Clowder configuration files",
  "$id": "http://json.schemastore.org/clowder",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "nonEmptyString": {
      "type": "string",
      "minLength": 1
    },
    "nonEmptyStringNoSpaces": {
      "type": "string",
      "minLength": 1,
      "pattern": "^((?! ).)*$"
    },
    "projectGroup": {
      "type": "string",
      "minLength": 1,
      "pattern": "^(?!default|all$)[a-zA-Z0-9-_]*$"
    },
    "projectGroups": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/projectGroup"
      }
    },
    "relativePath": {
      "description": "Relative file system path",
      "type": "string",
      "minLength": 1,
      "pattern": "^(?!\/.*$).*"
    },
    "gitConfigVariableName": {
      "description": "Fully qualified git config variable name",
      "type": "string",
      "minLength": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[.]([^\n]+[.]){0,1}[a-zA-Z][a-zA-Z0-9-]*$"
    },
    "gitConfigVariableValue": {
      "description": "Git config variable value",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyString"
        },
        {
          "type": "number"
        },
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    },
    "gitConfig": {
      "description": "Git config settings",
      "type": "object",
      "minProperties": 1,
      "propertyNames": {
        "$ref": "#/definitions/gitConfigVariableName"
      },
      "additionalProperties": {
        "$ref": "#/definitions/gitConfigVariableValue"
      }
    },
    "gitSettings": {
      "description": "Git settings",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "lfs": {
          "$ref": "#/definitions/lfs"
        },
        "recursive": {
          "$ref": "#/definitions/recursive"
        },
        "depth": {
          "$ref": "#/definitions/depth"
        },
        "config": {
          "$ref": "#/definitions/gitConfig"
        }
      }
    },
    "gitProjectName": {
      "description": "A unique name for this project. The project's name is appended onto its source's URL to generate the actual URL to configure the Git remote with. The URL gets formed as: ${source_url}/${project_name}.git where ${source_url} is the source's url and ${project_name} is the projectâ€™s name. The suffix '.git' is always appended as clowder assumes the upstream is a forest of bare Git repositories.",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "gitSourceName": {
      "description": "Git source name",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "gitRemoteName": {
      "description": "The name specified here is used as the remote name in each project's .git/config, and is therefore automatically available to commands like git fetch, git remote, git pull and git push.",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "depth": {
      "description": "Git clone depth",
      "type": "integer",
      "minimum": 0,
      "default": 0
    },
    "recursive": {
      "description": "Whether to clone and fetch project submodules recursively",
      "type": "boolean",
      "default": false
    },
    "lfs": {
      "description": "Whether repository uses git lfs",
      "type": "boolean",
      "default": false
    },
    "branch": {
      "description": "Name of the Git branch to track for this project. If not supplied the ref specified in the defaults is used if applicable, else the default branch 'master' is used.",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "tag": {
      "description": "Name of the Git tag to track for this project. If not supplied the ref specified in the defaults is used if applicable, else the default branch 'master' is used.",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "commit": {
      "description": "Git commit SHA-1 to track for this project. Must be full 40 character SHA-1. If not supplied the ref specified in the defaults is used if applicable, else the default branch 'master' is used.",
      "type": "string",
      "pattern": "[a-fA-F0-9]{40}"
    },
    "protocol": {
      "description": "The Git URL protocol prefix for all projects which use this remote source. Each project's source url and name are appended to this prefix to form the actual URL used to clone the project. Accepted values are 'ssh' or 'https', forming URL's of the form 'git@${remote_url}:${project_name}.git' or 'https://${remote_url}/${project_name}.git', respectively.",
      "type": "string",
      "enum": [
        "https",
        "ssh"
      ]
    },
    "source": {
      "description": "A map defining a git repository source",
      "type": "object",
      "required": [
        "name",
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Unique name of git repository's remote source",
          "oneOf": [
            {
              "$ref": "#/definitions/nonEmptyStringNoSpaces"
            }
          ]
        },
        "url": {
          "description": "The Git URL prefix for all projects which use this source. Each project's name is appended to this prefix to form the actual URL used to clone the project.",
          "oneOf": [
            {
              "$ref": "#/definitions/nonEmptyStringNoSpaces"
            }
          ]
        },
        "protocol": {
          "$ref": "#/definitions/protocol"
        }
      }
    },
    "fork": {
      "description": "A map defining a fork",
      "type": "object",
      "anyOf": [
        {
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "$ref": "#/definitions/gitProjectName"
            },
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "branch": {
              "$ref": "#/definitions/branch"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            }
          }
        },
        {
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "$ref": "#/definitions/gitProjectName"
            },
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "tag": {
              "$ref": "#/definitions/tag"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            }
          }
        },
        {
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "$ref": "#/definitions/gitProjectName"
            },
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "commit": {
              "$ref": "#/definitions/commit"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            }
          }
        }
      ]
    },
    "project": {
      "description": "A map defining a project",
      "type": "object",
      "anyOf": [
        {
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "$ref": "#/definitions/gitProjectName"
            },
            "path": {
              "description": "Path to clone project on disk",
              "oneOf": [
                {
                  "$ref": "#/definitions/relativePath"
                }
              ]
            },
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "branch": {
              "$ref": "#/definitions/branch"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            },
            "groups": {
              "description": "Groups project belongs to",
              "oneOf": [
                {
                  "$ref": "#/definitions/projectGroups"
                }
              ]
            },
            "fork": {
              "$ref": "#/definitions/fork"
            },
            "git": {
              "$ref": "#/definitions/gitSettings"
            }
          }
        },
        {
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "$ref": "#/definitions/gitProjectName"
            },
            "path": {
              "description": "Path to clone project on disk",
              "oneOf": [
                {
                  "$ref": "#/definitions/relativePath"
                }
              ]
            },
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "tag": {
              "$ref": "#/definitions/tag"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            },
            "groups": {
              "description": "Groups project belongs to",
              "oneOf": [
                {
                  "$ref": "#/definitions/projectGroups"
                }
              ]
            },
            "fork": {
              "$ref": "#/definitions/fork"
            },
            "git": {
              "$ref": "#/definitions/gitSettings"
            }
          }
        },
        {
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "$ref": "#/definitions/gitProjectName"
            },
            "path": {
              "description": "Path to clone project on disk",
              "oneOf": [
                {
                  "$ref": "#/definitions/relativePath"
                }
              ]
            },
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "commit": {
              "$ref": "#/definitions/commit"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            },
            "groups": {
              "description": "Groups project belongs to",
              "oneOf": [
                {
                  "$ref": "#/definitions/projectGroups"
                }
              ]
            },
            "fork": {
              "$ref": "#/definitions/fork"
            },
            "depth": {
              "$ref": "#/definitions/depth"
            },
            "git": {
              "$ref": "#/definitions/gitSettings"
            }
          }
        }
      ]
    }
  },
  "type": "object",
  "additionalProperties": false,
  "required": [
    "name",
    "defaults",
    "sources",
    "projects"
  ],
  "properties": {
    "name": {
      "description": "A name describing the projects",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "defaults": {
      "description": "Default values inherited by projects and sources",
      "type": "object",
      "anyOf": [
        {
          "required": [
            "protocol"
          ],
          "additionalProperties": false,
          "properties": {
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "branch": {
              "$ref": "#/definitions/branch"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            },
            "protocol": {
              "$ref": "#/definitions/protocol"
            },
            "git": {
              "$ref": "#/definitions/gitSettings"
            }
          }
        },
        {
          "required": [
            "protocol"
          ],
          "additionalProperties": false,
          "properties": {
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "tag": {
              "$ref": "#/definitions/tag"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            },
            "protocol": {
              "$ref": "#/definitions/protocol"
            },
            "git": {
              "$ref": "#/definitions/gitSettings"
            }
          }
        },
        {
          "required": [
            "protocol"
          ],
          "additionalProperties": false,
          "properties": {
            "source": {
              "$ref": "#/definitions/gitSourceName"
            },
            "commit": {
              "$ref": "#/definitions/commit"
            },
            "remote": {
              "$ref": "#/definitions/gitRemoteName"
            },
            "protocol": {
              "$ref": "#/definitions/protocol"
            },
            "git": {
              "$ref": "#/definitions/gitSettings"
            }
          }
        }
      ]
    },
    "sources": {
      "description": "List of sources",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/source"
      }
    },
    "projects": {
      "description": "List of projects",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/project"
      }
    }
  }
}
