{
  "title": "JSON schema for Clowder configuration files",
  "$id": "http://json.schemastore.org/clowder",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "nonEmptyString": {
      "type": "string",
      "minLength": 1,
      "pattern": "^((?! ).)*$"
    },
    "nonEmptyStringNoSpaces": {
      "type": "string",
      "minLength": 1
    },
    "alphanumericDashUnderscore": {
      "pattern": "[A-Za-z0-9_-]+"
    },
    "relativePath": {
      "type": "string",
      "minLength": 1,
      "pattern": "^(?!\/.*$).*"
    },
    "url": {
      "type": "string",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyString"
        }
      ]
    },
    "forbiddenGitRefCombinations": {
      "anyOf": [
        {
          "required": [
            "branch",
            "commit"
          ]
        },
        {
          "required": [
            "branch",
            "tag"
          ]
        },
        {
          "required": [
            "commit",
            "tag"
          ]
        }
      ]
    },
    "gitBranch": {
      "type": "string",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "gitTag": {
      "type": "string",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "gitRemote": {
      "type": "string",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "gitCommit": {
      "type": "string",
      "pattern": "[a-fA-F0-9]{40}"
    },
    "gitDepth": {
      "type": "integer",
      "minimum": 0,
      "default": 0
    },
    "gitSubmodules": {
      "type": "boolean",
      "default": false
    },
    "gitRecursive": {
      "type": "boolean",
      "default": false
    },
    "gitLfs": {
      "type": "boolean",
      "default": false
    },
    "gitProtocol": {
      "type": "string",
      "enum": [
        "https",
        "ssh"
      ]
    },
    "gitConfigVariableName": {
      "description": "Fully qualified git config variable name",
      "type": "string",
      "minLength": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*[.]([^\n]+[.]){0,1}[a-zA-Z][a-zA-Z0-9-]*$"
    },
    "gitConfigVariableValue": {
      "description": "Fully qualified git config variable name as key. Git config variable value.",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyString"
        },
        {
          "type": "number"
        },
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    },
    "gitConfig": {
      "description": "Project git config",
      "type": "object",
      "minProperties": 1,
      "propertyNames": {
        "$ref": "#/definitions/gitConfigVariableName"
      },
      "additionalProperties": {
        "$ref": "#/definitions/gitConfigVariableValue"
      }
    },
    "gitSettings": {
      "description": "Project git settings",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "lfs": {
          "description": "Whether project and upstream should install git lfs hooks and update lfs files",
          "oneOf": [
            {
              "$ref": "#/definitions/gitLfs"
            }
          ]
        },
        "recursive": {
          "description": "Whether to clone and fetch project and upstream submodules recursively",
          "oneOf": [
            {
              "$ref": "#/definitions/gitRecursive"
            }
          ]
        },
        "depth": {
          "description": "Project git clone depth",
          "oneOf": [
            {
              "$ref": "#/definitions/gitDepth"
            }
          ]
        },
        "config": {
          "description": "Project git config",
          "oneOf": [
            {
              "$ref": "#/definitions/gitConfig"
            }
          ]
        }
      }
    },
    "groupNames": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/groupName"
      }
    },
    "groupName": {
      "type": "string",
      "minLength": 1,
      "not": {
        "enum": [
          "default",
          "all"
        ]
      },
      "oneOf": [
        {
          "$ref": "#/definitions/alphanumericDashUnderscore"
        }
      ]
    },
    "defaults": {
      "description": "Default values inherited by projects, sources, and upstreams",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "source": {
          "description": "Default git hosting provider source name",
          "oneOf": [
            {
              "$ref": "#/definitions/sourceName"
            },
            {
              "$ref": "#/definitions/source"
            }
          ]
        },
        "branch": {
          "description": "Default name of the git branch to track for projects and upstreams. If not supplied the default branch 'master' is used.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitBranch"
            }
          ]
        },
        "tag": {
          "description": "Default name of the git tag to track for projects and upstreams.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitTag"
            }
          ]
        },
        "commit": {
          "description": "Default git commit SHA-1 to track for this projects and upstreams. Must be full 40 character SHA-1.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitCommit"
            }
          ]
        },
        "remote": {
          "description": "The name specified here is used as the default remote name in the project's .git/config, and is therefore automatically available to commands like git fetch, git remote, git pull and git push.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitRemote"
            }
          ]
        },
        "protocol": {
          "description": "Default git URL protocol for git hosting provider sources. Accepted values are 'ssh' or 'https'. If not supplied, defaults to 'ssh'. The full URL gets formed as:\ngit@${source_url}:${project_name/upstream_name}.git\nhttps://${source_url}/${project_name/upstream_name}.git",
          "oneOf": [
            {
              "$ref": "#/definitions/gitProtocol"
            }
          ]
        },
        "git": {
          "description": "Default git settings",
          "oneOf": [
            {
              "$ref": "#/definitions/gitSettings"
            }
          ]
        }
      },
      "not": {
        "$ref": "#/definitions/forbiddenGitRefCombinations"
      }
    },
    "sources": {
      "description": "Git hosting provider sources",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": {
        "$ref": "#/definitions/source"
      },
      "propertyNames": {
        "$ref": "#/definitions/sourceName"
      }
    },
    "sourceName": {
      "type": "string",
      "oneOf": [
        {
          "$ref": "#/definitions/alphanumericDashUnderscore"
        }
      ]
    },
    "source": {
      "description": "Name of git repository hosting provider source",
      "type": "object",
      "required": [
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "url": {
          "description": "The base URL of the git hosting provider. The full URL gets formed as:\ngit@${source_url}:${project_name/upstream_name}.git\nhttps://${source_url}/${project_name/upstream_name}.git",
          "oneOf": [
            {
              "$ref": "#/definitions/url"
            }
          ]
        },
        "protocol": {
          "description": "The git URL protocol for the git hosting provider source. Accepted values are 'ssh' or 'https'. If not supplied, defaults to 'ssh'. The full URL gets formed as:\ngit@${source_url}:${project_name/upstream_name}.git\nhttps://${source_url}/${project_name/upstream_name}.git",
          "oneOf": [
            {
              "$ref": "#/definitions/gitProtocol"
            }
          ]
        }
      }
    },
    "upstream": {
      "description": "Git project upstream",
      "oneOf": [
        {
          "$ref": "#/definitions/projectName"
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "A unique name for this upstream. The upstream's name is appended onto its source's URL to generate the full URL to configure the Git remote with. The full URL gets formed as:\ngit@${source_url}:${project_name/upstream_name}.git\nhttps://${source_url}/${project_name/upstream_name}.git",
              "oneOf": [
                {
                  "$ref": "#/definitions/projectName"
                }
              ]
            },
            "source": {
              "description": "Upstream git hosting provider source name",
              "oneOf": [
                {
                  "$ref": "#/definitions/sourceName"
                },
                {
                  "$ref": "#/definitions/source"
                }
              ]
            },
            "branch": {
              "description": "Name of the git branch to track for this upstream. If not supplied the ref specified in the defaults is used if applicable, else the default branch 'master' is used.",
              "oneOf": [
                {
                  "$ref": "#/definitions/gitBranch"
                }
              ]
            },
            "commit": {
              "description": "Git commit SHA-1 to track for this upstream. Must be full 40 character SHA-1.",
              "oneOf": [
                {
                  "$ref": "#/definitions/gitCommit"
                }
              ]
            },
            "tag": {
              "description": "Name of the git tag to track for this upstream.",
              "oneOf": [
                {
                  "$ref": "#/definitions/gitTag"
                }
              ]
            },
            "remote": {
              "description": "The name specified here is used as the remote name in the upstream's .git/config, and is therefore automatically available to commands like git fetch, git remote, git pull and git push.",
              "oneOf": [
                {
                  "$ref": "#/definitions/gitRemote"
                }
              ]
            }
          }
        }
      ],
      "not": {
        "$ref": "#/definitions/forbiddenGitRefCombinations"
      }
    },
    "projects": {
      "description": "List of git projects",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/project"
      }
    },
    "projectName": {
      "type": "string",
      "oneOf": [
        {
          "$ref": "#/definitions/nonEmptyStringNoSpaces"
        }
      ]
    },
    "project": {
      "description": "Git project",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "A unique name for this project.\nThe project's name is appended onto its source's URL to generate the full URL to configure the Git remote with. The full URL gets formed as:\ngit@${source_url}:${project_name/upstream_name}.git\nhttps://${source_url}/${project_name/upstream_name}.git",
          "oneOf": [
            {
              "$ref": "#/definitions/projectName"
            }
          ]
        },
        "path": {
          "description": "Path to clone project on disk",
          "oneOf": [
            {
              "$ref": "#/definitions/relativePath"
            }
          ]
        },
        "source": {
          "description": "Project git hosting provider source name",
          "oneOf": [
            {
              "$ref": "#/definitions/sourceName"
            },
            {
              "$ref": "#/definitions/source"
            }
          ]
        },
        "branch": {
          "description": "Name of the git branch to track for this project. If not supplied the ref specified in the defaults is used if applicable, else the default branch 'master' is used.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitBranch"
            }
          ]
        },
        "tag": {
          "description": "Name of the git tag to track for this project.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitTag"
            }
          ]
        },
        "commit": {
          "description": "Git commit SHA-1 to track for this project. Must be full 40 character SHA-1.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitCommit"
            }
          ]
        },
        "remote": {
          "description": "The name specified here is used as the remote name in the project .git/config, and is therefore automatically available to commands like git fetch, git remote, git pull and git push.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitRemote"
            }
          ]
        },
        "groups": {
          "description": "Groups project belongs to",
          "oneOf": [
            {
              "$ref": "#/definitions/groupNames"
            }
          ]
        },
        "upstream": {
          "description": "Upstream project name",
          "oneOf": [
            {
              "$ref": "#/definitions/projectName"
            },
            {
              "$ref": "#/definitions/upstream"
            }
          ]
        },
        "git": {
          "description": "Project git settings",
          "oneOf": [
            {
              "$ref": "#/definitions/gitSettings"
            }
          ]
        }
      },
      "not": {
        "$ref": "#/definitions/forbiddenGitRefCombinations"
      }
    },
    "clowderGroup": {
      "description": "Named projects section",
      "type": "object",
      "required": [
        "projects"
      ],
      "additionalProperties": false,
      "properties": {
        "path": {
          "description": "Prefix path for projects",
          "oneOf": [
            {
              "$ref": "#/definitions/relativePath"
            }
          ]
        },
        "groups": {
          "description": "Groups projects in section belong to",
          "oneOf": [
            {
              "$ref": "#/definitions/groupNames"
            }
          ]
        },
        "projects": {
          "description": "Projects section",
          "oneOf": [
            {
              "$ref": "#/definitions/projects"
            }
          ]
        },
        "branch": {
          "description": "Name of the git branch to track for this project. If not supplied the ref specified in the defaults is used if applicable, else the default branch 'master' is used.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitBranch"
            }
          ]
        },
        "tag": {
          "description": "Name of the git tag to track for projects and upstreams.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitTag"
            }
          ]
        },
        "commit": {
          "description": "Git commit SHA-1 to track for this projects and upstreams. Must be full 40 character SHA-1.",
          "oneOf": [
            {
              "$ref": "#/definitions/gitCommit"
            }
          ]
        },
        "source": {
          "description": "Project section git hosting provider source name",
          "oneOf": [
            {
              "$ref": "#/definitions/sourceName"
            },
            {
              "$ref": "#/definitions/source"
            }
          ]
        }
      },
      "not": {
        "$ref": "#/definitions/forbiddenGitRefCombinations"
      }
    },
    "clowderGroups": {
      "description": "Clowder groups",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": {
        "$ref": "#/definitions/clowderGroup"
      },
      "propertyNames": {
        "not": {
          "enum": [
            "default",
            "all",
            "defaults",
            "sources"
          ]
        },
        "allOf": [
          {
            "$ref": "#/definitions/alphanumericDashUnderscore"
          }
        ]
      },
      "properties": {
        "projects": {
          "$ref": "#/definitions/projects"
        }
      }
    },
    "clowderName": {
      "description": "A name describing the projects. Must be a string containing any combination of letters, numbers, - or _",
      "type": "string",
      "minLength": 1,
      "oneOf": [
        {
          "$ref": "#/definitions/alphanumericDashUnderscore"
        }
      ]
    },
    "clowder": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "clowder"
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/clowderName"
        },
        "defaults": {
          "$ref": "#/definitions/defaults"
        },
        "sources": {
          "$ref": "#/definitions/sources"
        },
        "clowder": {
          "$ref": "#/definitions/clowderGroups"
        }
      }
    }
  },
  "oneOf": [
    {
      "$ref": "#/definitions/clowder"
    }
  ]
}
